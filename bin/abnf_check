#!/usr/bin/env node
"use strict";

const abnf = require("../lib/abnf");
const { Command } = require("commander");

function check_refs(rules) {
  rules.refs.forEach(ref => {
    if (!Object.prototype.hasOwnProperty.call(
      rules.defs,
      ref.name.toUpperCase()
    )) {
      console.log("Unknown reference: '" + ref.name + "' at line " + ref.line);
    }
  });
  for (const name in rules.defs) {
    if ((rules.findRefs(name).length === 0) && (name !== rules.first)) {
      console.log("Unreferenced: '" + name + "' at line " + rules.defs[name].line);
    }
  }
}

const program = new Command();
program
  .argument("[abnfFile...]")
  .action(async(files, opts) => {
    if (files.length === 0) {
      files.push("-");
    }
    for (const f of files) {
      let rules = null;
      try {
        if (f === "-") {
          process.stdin.resume();
          rules = await abnf.parseStream(process.stdin);
        } else {
          rules = await abnf.parseFile(f);
        }
      } catch (er) {
        console.error("At line:", rules.line);
        console.error(er);
        return;
      }
      check_refs(rules, opts);
    }
  })
  .parseAsync()
  .catch(er => console.error(er));
